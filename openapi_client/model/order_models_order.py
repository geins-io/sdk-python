# coding: utf-8

"""
    Geins Management API

     Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth`   # noqa: E501

    The version of the OpenAPI document: v1.7
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class OrderModelsOrder(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Data carrier for an order.
    """


    class MetaOapg:
        
        class properties:
            Id = schemas.Int32Schema
            ExternalId = schemas.StrSchema
            PersonalId = schemas.StrSchema
            CustomerId = schemas.Int32Schema
            CustomerTypeId = schemas.Int32Schema
            CreatedAt = schemas.DateTimeSchema
            UpdatedAt = schemas.DateTimeSchema
            CompletedAt = schemas.DateTimeSchema
            Status = schemas.StrSchema
            Currency = schemas.StrSchema
            CurrencyRate = schemas.Float64Schema
            MarketId = schemas.Int32Schema
            MarketName = schemas.StrSchema
            Language = schemas.StrSchema
            OrderTotal = schemas.Float64Schema
            ExpectedSum = schemas.Float64Schema
            VATTotal = schemas.Float64Schema
            OrderValueIncVat = schemas.Float64Schema
            OrderValueExVat = schemas.Float64Schema
            ItemValueIncVat = schemas.Float64Schema
            ItemValueExVat = schemas.Float64Schema
            Discount = schemas.Float64Schema
            DiscountExVat = schemas.Float64Schema
            FromBalance = schemas.Float64Schema
            ShippingFee = schemas.Float64Schema
            ShippingFeeExVat = schemas.Float64Schema
            PaymentFee = schemas.Float64Schema
            PaymentFeeExVat = schemas.Float64Schema
            Message = schemas.StrSchema
            
            
            class OrderMessages(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'OrderMessages':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class PaymentDetails(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['OrderModelsPaymentDetail']:
                        return OrderModelsPaymentDetail
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['OrderModelsPaymentDetail'], typing.List['OrderModelsPaymentDetail']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'PaymentDetails':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'OrderModelsPaymentDetail':
                    return super().__getitem__(i)
            
            
            class ShippingDetails(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['OrderModelsShippingDetail']:
                        return OrderModelsShippingDetail
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['OrderModelsShippingDetail'], typing.List['OrderModelsShippingDetail']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'ShippingDetails':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'OrderModelsShippingDetail':
                    return super().__getitem__(i)
        
            @staticmethod
            def ShippingAddress() -> typing.Type['OrderModelsAddress']:
                return OrderModelsAddress
        
            @staticmethod
            def BillingAddress() -> typing.Type['OrderModelsAddress']:
                return OrderModelsAddress
            
            
            class Rows(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['OrderModelsOrderRow']:
                        return OrderModelsOrderRow
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['OrderModelsOrderRow'], typing.List['OrderModelsOrderRow']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'Rows':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'OrderModelsOrderRow':
                    return super().__getitem__(i)
            
            
            class Refunds(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['OrderModelsRefund']:
                        return OrderModelsRefund
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['OrderModelsRefund'], typing.List['OrderModelsRefund']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'Refunds':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'OrderModelsRefund':
                    return super().__getitem__(i)
            Ip = schemas.StrSchema
            UserAgent = schemas.StrSchema
            ServiceLocation = schemas.StrSchema
            CampaignCode = schemas.StrSchema
            CampaignCodeId = schemas.Int32Schema
            Percent = schemas.Int32Schema
            DesiredDeliveryDate = schemas.DateTimeSchema
            Gender = schemas.BoolSchema
            CartId = schemas.Int32Schema
            SessionId = schemas.StrSchema
            
            
            class ExternalOrderStatus(
                schemas.EnumBase,
                schemas.Int32Schema
            ):
            
            
                class MetaOapg:
                    format = 'int32'
                    enum_value_to_name = {
                        0: "POSITIVE_0",
                        10: "POSITIVE_10",
                        20: "POSITIVE_20",
                        30: "POSITIVE_30",
                        40: "POSITIVE_40",
                    }
                
                @schemas.classproperty
                def POSITIVE_0(cls):
                    return cls(0)
                
                @schemas.classproperty
                def POSITIVE_10(cls):
                    return cls(10)
                
                @schemas.classproperty
                def POSITIVE_20(cls):
                    return cls(20)
                
                @schemas.classproperty
                def POSITIVE_30(cls):
                    return cls(30)
                
                @schemas.classproperty
                def POSITIVE_40(cls):
                    return cls(40)
            
            
            class CampaignIds(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'CampaignIds':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class CampaignNames(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'CampaignNames':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class MetaData(
                schemas.DictSchema
            ):
            
            
                class MetaOapg:
                    additional_properties = schemas.StrSchema
                
                def __getitem__(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    # dict_instance[name] accessor
                    return super().__getitem__(name)
                
                def get_item_oapg(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    return super().get_item_oapg(name)
            
                def __new__(
                    cls,
                    *_args: typing.Union[dict, frozendict.frozendict, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                    **kwargs: typing.Union[MetaOapg.additional_properties, str, ],
                ) -> 'MetaData':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                        **kwargs,
                    )
            PublicId = schemas.UUIDSchema
            __annotations__ = {
                "Id": Id,
                "ExternalId": ExternalId,
                "PersonalId": PersonalId,
                "CustomerId": CustomerId,
                "CustomerTypeId": CustomerTypeId,
                "CreatedAt": CreatedAt,
                "UpdatedAt": UpdatedAt,
                "CompletedAt": CompletedAt,
                "Status": Status,
                "Currency": Currency,
                "CurrencyRate": CurrencyRate,
                "MarketId": MarketId,
                "MarketName": MarketName,
                "Language": Language,
                "OrderTotal": OrderTotal,
                "ExpectedSum": ExpectedSum,
                "VATTotal": VATTotal,
                "OrderValueIncVat": OrderValueIncVat,
                "OrderValueExVat": OrderValueExVat,
                "ItemValueIncVat": ItemValueIncVat,
                "ItemValueExVat": ItemValueExVat,
                "Discount": Discount,
                "DiscountExVat": DiscountExVat,
                "FromBalance": FromBalance,
                "ShippingFee": ShippingFee,
                "ShippingFeeExVat": ShippingFeeExVat,
                "PaymentFee": PaymentFee,
                "PaymentFeeExVat": PaymentFeeExVat,
                "Message": Message,
                "OrderMessages": OrderMessages,
                "PaymentDetails": PaymentDetails,
                "ShippingDetails": ShippingDetails,
                "ShippingAddress": ShippingAddress,
                "BillingAddress": BillingAddress,
                "Rows": Rows,
                "Refunds": Refunds,
                "Ip": Ip,
                "UserAgent": UserAgent,
                "ServiceLocation": ServiceLocation,
                "CampaignCode": CampaignCode,
                "CampaignCodeId": CampaignCodeId,
                "Percent": Percent,
                "DesiredDeliveryDate": DesiredDeliveryDate,
                "Gender": Gender,
                "CartId": CartId,
                "SessionId": SessionId,
                "ExternalOrderStatus": ExternalOrderStatus,
                "CampaignIds": CampaignIds,
                "CampaignNames": CampaignNames,
                "MetaData": MetaData,
                "PublicId": PublicId,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Id"]) -> MetaOapg.properties.Id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ExternalId"]) -> MetaOapg.properties.ExternalId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PersonalId"]) -> MetaOapg.properties.PersonalId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CustomerId"]) -> MetaOapg.properties.CustomerId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CustomerTypeId"]) -> MetaOapg.properties.CustomerTypeId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CreatedAt"]) -> MetaOapg.properties.CreatedAt: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["UpdatedAt"]) -> MetaOapg.properties.UpdatedAt: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CompletedAt"]) -> MetaOapg.properties.CompletedAt: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Status"]) -> MetaOapg.properties.Status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Currency"]) -> MetaOapg.properties.Currency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CurrencyRate"]) -> MetaOapg.properties.CurrencyRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MarketId"]) -> MetaOapg.properties.MarketId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MarketName"]) -> MetaOapg.properties.MarketName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Language"]) -> MetaOapg.properties.Language: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrderTotal"]) -> MetaOapg.properties.OrderTotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ExpectedSum"]) -> MetaOapg.properties.ExpectedSum: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["VATTotal"]) -> MetaOapg.properties.VATTotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrderValueIncVat"]) -> MetaOapg.properties.OrderValueIncVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrderValueExVat"]) -> MetaOapg.properties.OrderValueExVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ItemValueIncVat"]) -> MetaOapg.properties.ItemValueIncVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ItemValueExVat"]) -> MetaOapg.properties.ItemValueExVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Discount"]) -> MetaOapg.properties.Discount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DiscountExVat"]) -> MetaOapg.properties.DiscountExVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["FromBalance"]) -> MetaOapg.properties.FromBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingFee"]) -> MetaOapg.properties.ShippingFee: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingFeeExVat"]) -> MetaOapg.properties.ShippingFeeExVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PaymentFee"]) -> MetaOapg.properties.PaymentFee: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PaymentFeeExVat"]) -> MetaOapg.properties.PaymentFeeExVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Message"]) -> MetaOapg.properties.Message: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrderMessages"]) -> MetaOapg.properties.OrderMessages: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PaymentDetails"]) -> MetaOapg.properties.PaymentDetails: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingDetails"]) -> MetaOapg.properties.ShippingDetails: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingAddress"]) -> 'OrderModelsAddress': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["BillingAddress"]) -> 'OrderModelsAddress': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Rows"]) -> MetaOapg.properties.Rows: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Refunds"]) -> MetaOapg.properties.Refunds: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Ip"]) -> MetaOapg.properties.Ip: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["UserAgent"]) -> MetaOapg.properties.UserAgent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ServiceLocation"]) -> MetaOapg.properties.ServiceLocation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CampaignCode"]) -> MetaOapg.properties.CampaignCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CampaignCodeId"]) -> MetaOapg.properties.CampaignCodeId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Percent"]) -> MetaOapg.properties.Percent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DesiredDeliveryDate"]) -> MetaOapg.properties.DesiredDeliveryDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Gender"]) -> MetaOapg.properties.Gender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CartId"]) -> MetaOapg.properties.CartId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SessionId"]) -> MetaOapg.properties.SessionId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ExternalOrderStatus"]) -> MetaOapg.properties.ExternalOrderStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CampaignIds"]) -> MetaOapg.properties.CampaignIds: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CampaignNames"]) -> MetaOapg.properties.CampaignNames: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MetaData"]) -> MetaOapg.properties.MetaData: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PublicId"]) -> MetaOapg.properties.PublicId: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["Id", "ExternalId", "PersonalId", "CustomerId", "CustomerTypeId", "CreatedAt", "UpdatedAt", "CompletedAt", "Status", "Currency", "CurrencyRate", "MarketId", "MarketName", "Language", "OrderTotal", "ExpectedSum", "VATTotal", "OrderValueIncVat", "OrderValueExVat", "ItemValueIncVat", "ItemValueExVat", "Discount", "DiscountExVat", "FromBalance", "ShippingFee", "ShippingFeeExVat", "PaymentFee", "PaymentFeeExVat", "Message", "OrderMessages", "PaymentDetails", "ShippingDetails", "ShippingAddress", "BillingAddress", "Rows", "Refunds", "Ip", "UserAgent", "ServiceLocation", "CampaignCode", "CampaignCodeId", "Percent", "DesiredDeliveryDate", "Gender", "CartId", "SessionId", "ExternalOrderStatus", "CampaignIds", "CampaignNames", "MetaData", "PublicId", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Id"]) -> typing.Union[MetaOapg.properties.Id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ExternalId"]) -> typing.Union[MetaOapg.properties.ExternalId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PersonalId"]) -> typing.Union[MetaOapg.properties.PersonalId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CustomerId"]) -> typing.Union[MetaOapg.properties.CustomerId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CustomerTypeId"]) -> typing.Union[MetaOapg.properties.CustomerTypeId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CreatedAt"]) -> typing.Union[MetaOapg.properties.CreatedAt, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["UpdatedAt"]) -> typing.Union[MetaOapg.properties.UpdatedAt, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CompletedAt"]) -> typing.Union[MetaOapg.properties.CompletedAt, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Status"]) -> typing.Union[MetaOapg.properties.Status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Currency"]) -> typing.Union[MetaOapg.properties.Currency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CurrencyRate"]) -> typing.Union[MetaOapg.properties.CurrencyRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MarketId"]) -> typing.Union[MetaOapg.properties.MarketId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MarketName"]) -> typing.Union[MetaOapg.properties.MarketName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Language"]) -> typing.Union[MetaOapg.properties.Language, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrderTotal"]) -> typing.Union[MetaOapg.properties.OrderTotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ExpectedSum"]) -> typing.Union[MetaOapg.properties.ExpectedSum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["VATTotal"]) -> typing.Union[MetaOapg.properties.VATTotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrderValueIncVat"]) -> typing.Union[MetaOapg.properties.OrderValueIncVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrderValueExVat"]) -> typing.Union[MetaOapg.properties.OrderValueExVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ItemValueIncVat"]) -> typing.Union[MetaOapg.properties.ItemValueIncVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ItemValueExVat"]) -> typing.Union[MetaOapg.properties.ItemValueExVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Discount"]) -> typing.Union[MetaOapg.properties.Discount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DiscountExVat"]) -> typing.Union[MetaOapg.properties.DiscountExVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["FromBalance"]) -> typing.Union[MetaOapg.properties.FromBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingFee"]) -> typing.Union[MetaOapg.properties.ShippingFee, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingFeeExVat"]) -> typing.Union[MetaOapg.properties.ShippingFeeExVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PaymentFee"]) -> typing.Union[MetaOapg.properties.PaymentFee, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PaymentFeeExVat"]) -> typing.Union[MetaOapg.properties.PaymentFeeExVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Message"]) -> typing.Union[MetaOapg.properties.Message, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrderMessages"]) -> typing.Union[MetaOapg.properties.OrderMessages, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PaymentDetails"]) -> typing.Union[MetaOapg.properties.PaymentDetails, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingDetails"]) -> typing.Union[MetaOapg.properties.ShippingDetails, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingAddress"]) -> typing.Union['OrderModelsAddress', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["BillingAddress"]) -> typing.Union['OrderModelsAddress', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Rows"]) -> typing.Union[MetaOapg.properties.Rows, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Refunds"]) -> typing.Union[MetaOapg.properties.Refunds, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Ip"]) -> typing.Union[MetaOapg.properties.Ip, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["UserAgent"]) -> typing.Union[MetaOapg.properties.UserAgent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ServiceLocation"]) -> typing.Union[MetaOapg.properties.ServiceLocation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CampaignCode"]) -> typing.Union[MetaOapg.properties.CampaignCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CampaignCodeId"]) -> typing.Union[MetaOapg.properties.CampaignCodeId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Percent"]) -> typing.Union[MetaOapg.properties.Percent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DesiredDeliveryDate"]) -> typing.Union[MetaOapg.properties.DesiredDeliveryDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Gender"]) -> typing.Union[MetaOapg.properties.Gender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CartId"]) -> typing.Union[MetaOapg.properties.CartId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SessionId"]) -> typing.Union[MetaOapg.properties.SessionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ExternalOrderStatus"]) -> typing.Union[MetaOapg.properties.ExternalOrderStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CampaignIds"]) -> typing.Union[MetaOapg.properties.CampaignIds, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CampaignNames"]) -> typing.Union[MetaOapg.properties.CampaignNames, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MetaData"]) -> typing.Union[MetaOapg.properties.MetaData, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PublicId"]) -> typing.Union[MetaOapg.properties.PublicId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["Id", "ExternalId", "PersonalId", "CustomerId", "CustomerTypeId", "CreatedAt", "UpdatedAt", "CompletedAt", "Status", "Currency", "CurrencyRate", "MarketId", "MarketName", "Language", "OrderTotal", "ExpectedSum", "VATTotal", "OrderValueIncVat", "OrderValueExVat", "ItemValueIncVat", "ItemValueExVat", "Discount", "DiscountExVat", "FromBalance", "ShippingFee", "ShippingFeeExVat", "PaymentFee", "PaymentFeeExVat", "Message", "OrderMessages", "PaymentDetails", "ShippingDetails", "ShippingAddress", "BillingAddress", "Rows", "Refunds", "Ip", "UserAgent", "ServiceLocation", "CampaignCode", "CampaignCodeId", "Percent", "DesiredDeliveryDate", "Gender", "CartId", "SessionId", "ExternalOrderStatus", "CampaignIds", "CampaignNames", "MetaData", "PublicId", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        Id: typing.Union[MetaOapg.properties.Id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ExternalId: typing.Union[MetaOapg.properties.ExternalId, str, schemas.Unset] = schemas.unset,
        PersonalId: typing.Union[MetaOapg.properties.PersonalId, str, schemas.Unset] = schemas.unset,
        CustomerId: typing.Union[MetaOapg.properties.CustomerId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        CustomerTypeId: typing.Union[MetaOapg.properties.CustomerTypeId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        CreatedAt: typing.Union[MetaOapg.properties.CreatedAt, str, datetime, schemas.Unset] = schemas.unset,
        UpdatedAt: typing.Union[MetaOapg.properties.UpdatedAt, str, datetime, schemas.Unset] = schemas.unset,
        CompletedAt: typing.Union[MetaOapg.properties.CompletedAt, str, datetime, schemas.Unset] = schemas.unset,
        Status: typing.Union[MetaOapg.properties.Status, str, schemas.Unset] = schemas.unset,
        Currency: typing.Union[MetaOapg.properties.Currency, str, schemas.Unset] = schemas.unset,
        CurrencyRate: typing.Union[MetaOapg.properties.CurrencyRate, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        MarketId: typing.Union[MetaOapg.properties.MarketId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        MarketName: typing.Union[MetaOapg.properties.MarketName, str, schemas.Unset] = schemas.unset,
        Language: typing.Union[MetaOapg.properties.Language, str, schemas.Unset] = schemas.unset,
        OrderTotal: typing.Union[MetaOapg.properties.OrderTotal, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ExpectedSum: typing.Union[MetaOapg.properties.ExpectedSum, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        VATTotal: typing.Union[MetaOapg.properties.VATTotal, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        OrderValueIncVat: typing.Union[MetaOapg.properties.OrderValueIncVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        OrderValueExVat: typing.Union[MetaOapg.properties.OrderValueExVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ItemValueIncVat: typing.Union[MetaOapg.properties.ItemValueIncVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ItemValueExVat: typing.Union[MetaOapg.properties.ItemValueExVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        Discount: typing.Union[MetaOapg.properties.Discount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        DiscountExVat: typing.Union[MetaOapg.properties.DiscountExVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        FromBalance: typing.Union[MetaOapg.properties.FromBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ShippingFee: typing.Union[MetaOapg.properties.ShippingFee, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ShippingFeeExVat: typing.Union[MetaOapg.properties.ShippingFeeExVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        PaymentFee: typing.Union[MetaOapg.properties.PaymentFee, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        PaymentFeeExVat: typing.Union[MetaOapg.properties.PaymentFeeExVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        Message: typing.Union[MetaOapg.properties.Message, str, schemas.Unset] = schemas.unset,
        OrderMessages: typing.Union[MetaOapg.properties.OrderMessages, list, tuple, schemas.Unset] = schemas.unset,
        PaymentDetails: typing.Union[MetaOapg.properties.PaymentDetails, list, tuple, schemas.Unset] = schemas.unset,
        ShippingDetails: typing.Union[MetaOapg.properties.ShippingDetails, list, tuple, schemas.Unset] = schemas.unset,
        ShippingAddress: typing.Union['OrderModelsAddress', schemas.Unset] = schemas.unset,
        BillingAddress: typing.Union['OrderModelsAddress', schemas.Unset] = schemas.unset,
        Rows: typing.Union[MetaOapg.properties.Rows, list, tuple, schemas.Unset] = schemas.unset,
        Refunds: typing.Union[MetaOapg.properties.Refunds, list, tuple, schemas.Unset] = schemas.unset,
        Ip: typing.Union[MetaOapg.properties.Ip, str, schemas.Unset] = schemas.unset,
        UserAgent: typing.Union[MetaOapg.properties.UserAgent, str, schemas.Unset] = schemas.unset,
        ServiceLocation: typing.Union[MetaOapg.properties.ServiceLocation, str, schemas.Unset] = schemas.unset,
        CampaignCode: typing.Union[MetaOapg.properties.CampaignCode, str, schemas.Unset] = schemas.unset,
        CampaignCodeId: typing.Union[MetaOapg.properties.CampaignCodeId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        Percent: typing.Union[MetaOapg.properties.Percent, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        DesiredDeliveryDate: typing.Union[MetaOapg.properties.DesiredDeliveryDate, str, datetime, schemas.Unset] = schemas.unset,
        Gender: typing.Union[MetaOapg.properties.Gender, bool, schemas.Unset] = schemas.unset,
        CartId: typing.Union[MetaOapg.properties.CartId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        SessionId: typing.Union[MetaOapg.properties.SessionId, str, schemas.Unset] = schemas.unset,
        ExternalOrderStatus: typing.Union[MetaOapg.properties.ExternalOrderStatus, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        CampaignIds: typing.Union[MetaOapg.properties.CampaignIds, list, tuple, schemas.Unset] = schemas.unset,
        CampaignNames: typing.Union[MetaOapg.properties.CampaignNames, list, tuple, schemas.Unset] = schemas.unset,
        MetaData: typing.Union[MetaOapg.properties.MetaData, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        PublicId: typing.Union[MetaOapg.properties.PublicId, str, uuid.UUID, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'OrderModelsOrder':
        return super().__new__(
            cls,
            *_args,
            Id=Id,
            ExternalId=ExternalId,
            PersonalId=PersonalId,
            CustomerId=CustomerId,
            CustomerTypeId=CustomerTypeId,
            CreatedAt=CreatedAt,
            UpdatedAt=UpdatedAt,
            CompletedAt=CompletedAt,
            Status=Status,
            Currency=Currency,
            CurrencyRate=CurrencyRate,
            MarketId=MarketId,
            MarketName=MarketName,
            Language=Language,
            OrderTotal=OrderTotal,
            ExpectedSum=ExpectedSum,
            VATTotal=VATTotal,
            OrderValueIncVat=OrderValueIncVat,
            OrderValueExVat=OrderValueExVat,
            ItemValueIncVat=ItemValueIncVat,
            ItemValueExVat=ItemValueExVat,
            Discount=Discount,
            DiscountExVat=DiscountExVat,
            FromBalance=FromBalance,
            ShippingFee=ShippingFee,
            ShippingFeeExVat=ShippingFeeExVat,
            PaymentFee=PaymentFee,
            PaymentFeeExVat=PaymentFeeExVat,
            Message=Message,
            OrderMessages=OrderMessages,
            PaymentDetails=PaymentDetails,
            ShippingDetails=ShippingDetails,
            ShippingAddress=ShippingAddress,
            BillingAddress=BillingAddress,
            Rows=Rows,
            Refunds=Refunds,
            Ip=Ip,
            UserAgent=UserAgent,
            ServiceLocation=ServiceLocation,
            CampaignCode=CampaignCode,
            CampaignCodeId=CampaignCodeId,
            Percent=Percent,
            DesiredDeliveryDate=DesiredDeliveryDate,
            Gender=Gender,
            CartId=CartId,
            SessionId=SessionId,
            ExternalOrderStatus=ExternalOrderStatus,
            CampaignIds=CampaignIds,
            CampaignNames=CampaignNames,
            MetaData=MetaData,
            PublicId=PublicId,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.order_models_address import OrderModelsAddress
from openapi_client.model.order_models_order_row import OrderModelsOrderRow
from openapi_client.model.order_models_payment_detail import OrderModelsPaymentDetail
from openapi_client.model.order_models_refund import OrderModelsRefund
from openapi_client.model.order_models_shipping_detail import OrderModelsShippingDetail
