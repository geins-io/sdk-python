# coding: utf-8

"""
    Geins Management API

     Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth`   # noqa: E501

    The version of the OpenAPI document: v1.7
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class OrderRefund(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            RefundId = schemas.UUIDSchema
            RefundInstanceId = schemas.Int32Schema
            OrderId = schemas.Int32Schema
            ExternalOrderId = schemas.StrSchema
            ExternalId = schemas.StrSchema
            Reference = schemas.StrSchema
            Description = schemas.StrSchema
            ProcessedOn = schemas.DateTimeSchema
            RefundedItemTotal = schemas.Float64Schema
            RefundedShippingFee = schemas.Float64Schema
            RefundedPaymentFee = schemas.Float64Schema
            RefundedDiscount = schemas.Float64Schema
            RefundedBalance = schemas.Float64Schema
            VatRate = schemas.Float64Schema
            PaymentName = schemas.StrSchema
            Locale = schemas.StrSchema
            
            
            class Rows(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['OrderRefundRow']:
                        return OrderRefundRow
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['OrderRefundRow'], typing.List['OrderRefundRow']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'Rows':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'OrderRefundRow':
                    return super().__getitem__(i)
            OrderTransactionId = schemas.StrSchema
            SecondaryOrderTransactionId = schemas.StrSchema
            __annotations__ = {
                "RefundId": RefundId,
                "RefundInstanceId": RefundInstanceId,
                "OrderId": OrderId,
                "ExternalOrderId": ExternalOrderId,
                "ExternalId": ExternalId,
                "Reference": Reference,
                "Description": Description,
                "ProcessedOn": ProcessedOn,
                "RefundedItemTotal": RefundedItemTotal,
                "RefundedShippingFee": RefundedShippingFee,
                "RefundedPaymentFee": RefundedPaymentFee,
                "RefundedDiscount": RefundedDiscount,
                "RefundedBalance": RefundedBalance,
                "VatRate": VatRate,
                "PaymentName": PaymentName,
                "Locale": Locale,
                "Rows": Rows,
                "OrderTransactionId": OrderTransactionId,
                "SecondaryOrderTransactionId": SecondaryOrderTransactionId,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["RefundId"]) -> MetaOapg.properties.RefundId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["RefundInstanceId"]) -> MetaOapg.properties.RefundInstanceId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrderId"]) -> MetaOapg.properties.OrderId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ExternalOrderId"]) -> MetaOapg.properties.ExternalOrderId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ExternalId"]) -> MetaOapg.properties.ExternalId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Reference"]) -> MetaOapg.properties.Reference: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Description"]) -> MetaOapg.properties.Description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ProcessedOn"]) -> MetaOapg.properties.ProcessedOn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["RefundedItemTotal"]) -> MetaOapg.properties.RefundedItemTotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["RefundedShippingFee"]) -> MetaOapg.properties.RefundedShippingFee: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["RefundedPaymentFee"]) -> MetaOapg.properties.RefundedPaymentFee: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["RefundedDiscount"]) -> MetaOapg.properties.RefundedDiscount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["RefundedBalance"]) -> MetaOapg.properties.RefundedBalance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["VatRate"]) -> MetaOapg.properties.VatRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PaymentName"]) -> MetaOapg.properties.PaymentName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Locale"]) -> MetaOapg.properties.Locale: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Rows"]) -> MetaOapg.properties.Rows: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrderTransactionId"]) -> MetaOapg.properties.OrderTransactionId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SecondaryOrderTransactionId"]) -> MetaOapg.properties.SecondaryOrderTransactionId: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["RefundId", "RefundInstanceId", "OrderId", "ExternalOrderId", "ExternalId", "Reference", "Description", "ProcessedOn", "RefundedItemTotal", "RefundedShippingFee", "RefundedPaymentFee", "RefundedDiscount", "RefundedBalance", "VatRate", "PaymentName", "Locale", "Rows", "OrderTransactionId", "SecondaryOrderTransactionId", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["RefundId"]) -> typing.Union[MetaOapg.properties.RefundId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["RefundInstanceId"]) -> typing.Union[MetaOapg.properties.RefundInstanceId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrderId"]) -> typing.Union[MetaOapg.properties.OrderId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ExternalOrderId"]) -> typing.Union[MetaOapg.properties.ExternalOrderId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ExternalId"]) -> typing.Union[MetaOapg.properties.ExternalId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Reference"]) -> typing.Union[MetaOapg.properties.Reference, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Description"]) -> typing.Union[MetaOapg.properties.Description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ProcessedOn"]) -> typing.Union[MetaOapg.properties.ProcessedOn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["RefundedItemTotal"]) -> typing.Union[MetaOapg.properties.RefundedItemTotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["RefundedShippingFee"]) -> typing.Union[MetaOapg.properties.RefundedShippingFee, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["RefundedPaymentFee"]) -> typing.Union[MetaOapg.properties.RefundedPaymentFee, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["RefundedDiscount"]) -> typing.Union[MetaOapg.properties.RefundedDiscount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["RefundedBalance"]) -> typing.Union[MetaOapg.properties.RefundedBalance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["VatRate"]) -> typing.Union[MetaOapg.properties.VatRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PaymentName"]) -> typing.Union[MetaOapg.properties.PaymentName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Locale"]) -> typing.Union[MetaOapg.properties.Locale, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Rows"]) -> typing.Union[MetaOapg.properties.Rows, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrderTransactionId"]) -> typing.Union[MetaOapg.properties.OrderTransactionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SecondaryOrderTransactionId"]) -> typing.Union[MetaOapg.properties.SecondaryOrderTransactionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["RefundId", "RefundInstanceId", "OrderId", "ExternalOrderId", "ExternalId", "Reference", "Description", "ProcessedOn", "RefundedItemTotal", "RefundedShippingFee", "RefundedPaymentFee", "RefundedDiscount", "RefundedBalance", "VatRate", "PaymentName", "Locale", "Rows", "OrderTransactionId", "SecondaryOrderTransactionId", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        RefundId: typing.Union[MetaOapg.properties.RefundId, str, uuid.UUID, schemas.Unset] = schemas.unset,
        RefundInstanceId: typing.Union[MetaOapg.properties.RefundInstanceId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        OrderId: typing.Union[MetaOapg.properties.OrderId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ExternalOrderId: typing.Union[MetaOapg.properties.ExternalOrderId, str, schemas.Unset] = schemas.unset,
        ExternalId: typing.Union[MetaOapg.properties.ExternalId, str, schemas.Unset] = schemas.unset,
        Reference: typing.Union[MetaOapg.properties.Reference, str, schemas.Unset] = schemas.unset,
        Description: typing.Union[MetaOapg.properties.Description, str, schemas.Unset] = schemas.unset,
        ProcessedOn: typing.Union[MetaOapg.properties.ProcessedOn, str, datetime, schemas.Unset] = schemas.unset,
        RefundedItemTotal: typing.Union[MetaOapg.properties.RefundedItemTotal, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        RefundedShippingFee: typing.Union[MetaOapg.properties.RefundedShippingFee, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        RefundedPaymentFee: typing.Union[MetaOapg.properties.RefundedPaymentFee, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        RefundedDiscount: typing.Union[MetaOapg.properties.RefundedDiscount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        RefundedBalance: typing.Union[MetaOapg.properties.RefundedBalance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        VatRate: typing.Union[MetaOapg.properties.VatRate, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        PaymentName: typing.Union[MetaOapg.properties.PaymentName, str, schemas.Unset] = schemas.unset,
        Locale: typing.Union[MetaOapg.properties.Locale, str, schemas.Unset] = schemas.unset,
        Rows: typing.Union[MetaOapg.properties.Rows, list, tuple, schemas.Unset] = schemas.unset,
        OrderTransactionId: typing.Union[MetaOapg.properties.OrderTransactionId, str, schemas.Unset] = schemas.unset,
        SecondaryOrderTransactionId: typing.Union[MetaOapg.properties.SecondaryOrderTransactionId, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'OrderRefund':
        return super().__new__(
            cls,
            *_args,
            RefundId=RefundId,
            RefundInstanceId=RefundInstanceId,
            OrderId=OrderId,
            ExternalOrderId=ExternalOrderId,
            ExternalId=ExternalId,
            Reference=Reference,
            Description=Description,
            ProcessedOn=ProcessedOn,
            RefundedItemTotal=RefundedItemTotal,
            RefundedShippingFee=RefundedShippingFee,
            RefundedPaymentFee=RefundedPaymentFee,
            RefundedDiscount=RefundedDiscount,
            RefundedBalance=RefundedBalance,
            VatRate=VatRate,
            PaymentName=PaymentName,
            Locale=Locale,
            Rows=Rows,
            OrderTransactionId=OrderTransactionId,
            SecondaryOrderTransactionId=SecondaryOrderTransactionId,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.order_refund_row import OrderRefundRow
