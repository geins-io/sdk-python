# coding: utf-8

"""
    Geins Management API

     Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth`   # noqa: E501

    The version of the OpenAPI document: v1.7
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class OrderCheckoutOrder(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            OrderId = schemas.StrSchema
            ExternalOrderId = schemas.StrSchema
            CartId = schemas.StrSchema
            SessionId = schemas.StrSchema
            SiteId = schemas.Int32Schema
            Currency = schemas.StrSchema
            Status = schemas.StrSchema
            IpAddress = schemas.StrSchema
            Message = schemas.StrSchema
            InternalMessage = schemas.StrSchema
            Locale = schemas.StrSchema
            
            
            class Rows(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['OrderCheckoutOrderRow']:
                        return OrderCheckoutOrderRow
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['OrderCheckoutOrderRow'], typing.List['OrderCheckoutOrderRow']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'Rows':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'OrderCheckoutOrderRow':
                    return super().__getitem__(i)
            CampaignId = schemas.Int32Schema
            CampaignCode = schemas.StrSchema
            CampaignName = schemas.StrSchema
            
            
            class CampaignIds(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'CampaignIds':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class CampaignNames(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'CampaignNames':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            CustomerId = schemas.Int32Schema
            CustomerTypeId = schemas.Int32Schema
            
            
            class Gender(
                schemas.EnumBase,
                schemas.Int32Schema
            ):
                
                @schemas.classproperty
                def POSITIVE_0(cls):
                    return cls(0)
                
                @schemas.classproperty
                def POSITIVE_1(cls):
                    return cls(1)
                
                @schemas.classproperty
                def POSITIVE_2(cls):
                    return cls(2)
            DateOfBirth = schemas.DateTimeSchema
            PersonalId = schemas.StrSchema
            UserAgent = schemas.StrSchema
            
            
            class MetaData(
                schemas.DictSchema
            ):
            
            
                class MetaOapg:
                    additional_properties = schemas.StrSchema
                
                def __getitem__(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    # dict_instance[name] accessor
                    return super().__getitem__(name)
                
                def get_item_oapg(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    return super().get_item_oapg(name)
            
                def __new__(
                    cls,
                    *_args: typing.Union[dict, frozendict.frozendict, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                    **kwargs: typing.Union[MetaOapg.additional_properties, str, ],
                ) -> 'MetaData':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                        **kwargs,
                    )
            PaymentId = schemas.Int32Schema
            TransactionId = schemas.StrSchema
            SecondaryTransactionId = schemas.StrSchema
            Country = schemas.StrSchema
            Company = schemas.StrSchema
            OrganizationNumber = schemas.StrSchema
            FirstName = schemas.StrSchema
            LastName = schemas.StrSchema
            Email = schemas.StrSchema
            Address1 = schemas.StrSchema
            Address2 = schemas.StrSchema
            Zip = schemas.StrSchema
            City = schemas.StrSchema
            Region = schemas.StrSchema
            Phone = schemas.StrSchema
            MobilePhone = schemas.StrSchema
            CareOf = schemas.StrSchema
            ShippingId = schemas.Int32Schema
            ShippingCountry = schemas.StrSchema
            ShippingCompany = schemas.StrSchema
            ShippingOrganizationNumber = schemas.StrSchema
            ShippingFirstName = schemas.StrSchema
            ShippingLastName = schemas.StrSchema
            ShippingEmail = schemas.StrSchema
            ShippingAddress1 = schemas.StrSchema
            ShippingAddress2 = schemas.StrSchema
            ShippingZip = schemas.StrSchema
            ShippingCity = schemas.StrSchema
            ShippingRegion = schemas.StrSchema
            ShippingPhone = schemas.StrSchema
            ShippingMobilePhone = schemas.StrSchema
            ShippingCareOf = schemas.StrSchema
            PickupPoint = schemas.StrSchema
            DesiredDeliveryDate = schemas.DateTimeSchema
        
            @staticmethod
            def FreightClass() -> typing.Type['OrderFreightClass']:
                return OrderFreightClass
            Sum = schemas.Float64Schema
            ExpectedSum = schemas.Float64Schema
            OrderValueIncVat = schemas.Float64Schema
            OrderValueExVat = schemas.Float64Schema
            ItemValueIncVat = schemas.Float64Schema
            ItemValueExVat = schemas.Float64Schema
            DiscountIncVat = schemas.Float64Schema
            DiscountExVat = schemas.Float64Schema
            PercentDiscount = schemas.Int32Schema
            Balance = schemas.Float64Schema
            ShippingFeeIncVat = schemas.Float64Schema
            ShippingFeeExVat = schemas.Float64Schema
            PaymentFeeIncVat = schemas.Float64Schema
            PaymentFeeExVat = schemas.Float64Schema
            __annotations__ = {
                "OrderId": OrderId,
                "ExternalOrderId": ExternalOrderId,
                "CartId": CartId,
                "SessionId": SessionId,
                "SiteId": SiteId,
                "Currency": Currency,
                "Status": Status,
                "IpAddress": IpAddress,
                "Message": Message,
                "InternalMessage": InternalMessage,
                "Locale": Locale,
                "Rows": Rows,
                "CampaignId": CampaignId,
                "CampaignCode": CampaignCode,
                "CampaignName": CampaignName,
                "CampaignIds": CampaignIds,
                "CampaignNames": CampaignNames,
                "CustomerId": CustomerId,
                "CustomerTypeId": CustomerTypeId,
                "Gender": Gender,
                "DateOfBirth": DateOfBirth,
                "PersonalId": PersonalId,
                "UserAgent": UserAgent,
                "MetaData": MetaData,
                "PaymentId": PaymentId,
                "TransactionId": TransactionId,
                "SecondaryTransactionId": SecondaryTransactionId,
                "Country": Country,
                "Company": Company,
                "OrganizationNumber": OrganizationNumber,
                "FirstName": FirstName,
                "LastName": LastName,
                "Email": Email,
                "Address1": Address1,
                "Address2": Address2,
                "Zip": Zip,
                "City": City,
                "Region": Region,
                "Phone": Phone,
                "MobilePhone": MobilePhone,
                "CareOf": CareOf,
                "ShippingId": ShippingId,
                "ShippingCountry": ShippingCountry,
                "ShippingCompany": ShippingCompany,
                "ShippingOrganizationNumber": ShippingOrganizationNumber,
                "ShippingFirstName": ShippingFirstName,
                "ShippingLastName": ShippingLastName,
                "ShippingEmail": ShippingEmail,
                "ShippingAddress1": ShippingAddress1,
                "ShippingAddress2": ShippingAddress2,
                "ShippingZip": ShippingZip,
                "ShippingCity": ShippingCity,
                "ShippingRegion": ShippingRegion,
                "ShippingPhone": ShippingPhone,
                "ShippingMobilePhone": ShippingMobilePhone,
                "ShippingCareOf": ShippingCareOf,
                "PickupPoint": PickupPoint,
                "DesiredDeliveryDate": DesiredDeliveryDate,
                "FreightClass": FreightClass,
                "Sum": Sum,
                "ExpectedSum": ExpectedSum,
                "OrderValueIncVat": OrderValueIncVat,
                "OrderValueExVat": OrderValueExVat,
                "ItemValueIncVat": ItemValueIncVat,
                "ItemValueExVat": ItemValueExVat,
                "DiscountIncVat": DiscountIncVat,
                "DiscountExVat": DiscountExVat,
                "PercentDiscount": PercentDiscount,
                "Balance": Balance,
                "ShippingFeeIncVat": ShippingFeeIncVat,
                "ShippingFeeExVat": ShippingFeeExVat,
                "PaymentFeeIncVat": PaymentFeeIncVat,
                "PaymentFeeExVat": PaymentFeeExVat,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrderId"]) -> MetaOapg.properties.OrderId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ExternalOrderId"]) -> MetaOapg.properties.ExternalOrderId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CartId"]) -> MetaOapg.properties.CartId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SessionId"]) -> MetaOapg.properties.SessionId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SiteId"]) -> MetaOapg.properties.SiteId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Currency"]) -> MetaOapg.properties.Currency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Status"]) -> MetaOapg.properties.Status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["IpAddress"]) -> MetaOapg.properties.IpAddress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Message"]) -> MetaOapg.properties.Message: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["InternalMessage"]) -> MetaOapg.properties.InternalMessage: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Locale"]) -> MetaOapg.properties.Locale: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Rows"]) -> MetaOapg.properties.Rows: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CampaignId"]) -> MetaOapg.properties.CampaignId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CampaignCode"]) -> MetaOapg.properties.CampaignCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CampaignName"]) -> MetaOapg.properties.CampaignName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CampaignIds"]) -> MetaOapg.properties.CampaignIds: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CampaignNames"]) -> MetaOapg.properties.CampaignNames: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CustomerId"]) -> MetaOapg.properties.CustomerId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CustomerTypeId"]) -> MetaOapg.properties.CustomerTypeId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Gender"]) -> MetaOapg.properties.Gender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DateOfBirth"]) -> MetaOapg.properties.DateOfBirth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PersonalId"]) -> MetaOapg.properties.PersonalId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["UserAgent"]) -> MetaOapg.properties.UserAgent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MetaData"]) -> MetaOapg.properties.MetaData: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PaymentId"]) -> MetaOapg.properties.PaymentId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["TransactionId"]) -> MetaOapg.properties.TransactionId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["SecondaryTransactionId"]) -> MetaOapg.properties.SecondaryTransactionId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Country"]) -> MetaOapg.properties.Country: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Company"]) -> MetaOapg.properties.Company: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrganizationNumber"]) -> MetaOapg.properties.OrganizationNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["FirstName"]) -> MetaOapg.properties.FirstName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["LastName"]) -> MetaOapg.properties.LastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Email"]) -> MetaOapg.properties.Email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Address1"]) -> MetaOapg.properties.Address1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Address2"]) -> MetaOapg.properties.Address2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Zip"]) -> MetaOapg.properties.Zip: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["City"]) -> MetaOapg.properties.City: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Region"]) -> MetaOapg.properties.Region: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Phone"]) -> MetaOapg.properties.Phone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["MobilePhone"]) -> MetaOapg.properties.MobilePhone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["CareOf"]) -> MetaOapg.properties.CareOf: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingId"]) -> MetaOapg.properties.ShippingId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingCountry"]) -> MetaOapg.properties.ShippingCountry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingCompany"]) -> MetaOapg.properties.ShippingCompany: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingOrganizationNumber"]) -> MetaOapg.properties.ShippingOrganizationNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingFirstName"]) -> MetaOapg.properties.ShippingFirstName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingLastName"]) -> MetaOapg.properties.ShippingLastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingEmail"]) -> MetaOapg.properties.ShippingEmail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingAddress1"]) -> MetaOapg.properties.ShippingAddress1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingAddress2"]) -> MetaOapg.properties.ShippingAddress2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingZip"]) -> MetaOapg.properties.ShippingZip: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingCity"]) -> MetaOapg.properties.ShippingCity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingRegion"]) -> MetaOapg.properties.ShippingRegion: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingPhone"]) -> MetaOapg.properties.ShippingPhone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingMobilePhone"]) -> MetaOapg.properties.ShippingMobilePhone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingCareOf"]) -> MetaOapg.properties.ShippingCareOf: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PickupPoint"]) -> MetaOapg.properties.PickupPoint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DesiredDeliveryDate"]) -> MetaOapg.properties.DesiredDeliveryDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["FreightClass"]) -> 'OrderFreightClass': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Sum"]) -> MetaOapg.properties.Sum: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ExpectedSum"]) -> MetaOapg.properties.ExpectedSum: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrderValueIncVat"]) -> MetaOapg.properties.OrderValueIncVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["OrderValueExVat"]) -> MetaOapg.properties.OrderValueExVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ItemValueIncVat"]) -> MetaOapg.properties.ItemValueIncVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ItemValueExVat"]) -> MetaOapg.properties.ItemValueExVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DiscountIncVat"]) -> MetaOapg.properties.DiscountIncVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["DiscountExVat"]) -> MetaOapg.properties.DiscountExVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PercentDiscount"]) -> MetaOapg.properties.PercentDiscount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["Balance"]) -> MetaOapg.properties.Balance: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingFeeIncVat"]) -> MetaOapg.properties.ShippingFeeIncVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ShippingFeeExVat"]) -> MetaOapg.properties.ShippingFeeExVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PaymentFeeIncVat"]) -> MetaOapg.properties.PaymentFeeIncVat: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["PaymentFeeExVat"]) -> MetaOapg.properties.PaymentFeeExVat: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["OrderId", "ExternalOrderId", "CartId", "SessionId", "SiteId", "Currency", "Status", "IpAddress", "Message", "InternalMessage", "Locale", "Rows", "CampaignId", "CampaignCode", "CampaignName", "CampaignIds", "CampaignNames", "CustomerId", "CustomerTypeId", "Gender", "DateOfBirth", "PersonalId", "UserAgent", "MetaData", "PaymentId", "TransactionId", "SecondaryTransactionId", "Country", "Company", "OrganizationNumber", "FirstName", "LastName", "Email", "Address1", "Address2", "Zip", "City", "Region", "Phone", "MobilePhone", "CareOf", "ShippingId", "ShippingCountry", "ShippingCompany", "ShippingOrganizationNumber", "ShippingFirstName", "ShippingLastName", "ShippingEmail", "ShippingAddress1", "ShippingAddress2", "ShippingZip", "ShippingCity", "ShippingRegion", "ShippingPhone", "ShippingMobilePhone", "ShippingCareOf", "PickupPoint", "DesiredDeliveryDate", "FreightClass", "Sum", "ExpectedSum", "OrderValueIncVat", "OrderValueExVat", "ItemValueIncVat", "ItemValueExVat", "DiscountIncVat", "DiscountExVat", "PercentDiscount", "Balance", "ShippingFeeIncVat", "ShippingFeeExVat", "PaymentFeeIncVat", "PaymentFeeExVat", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrderId"]) -> typing.Union[MetaOapg.properties.OrderId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ExternalOrderId"]) -> typing.Union[MetaOapg.properties.ExternalOrderId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CartId"]) -> typing.Union[MetaOapg.properties.CartId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SessionId"]) -> typing.Union[MetaOapg.properties.SessionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SiteId"]) -> typing.Union[MetaOapg.properties.SiteId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Currency"]) -> typing.Union[MetaOapg.properties.Currency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Status"]) -> typing.Union[MetaOapg.properties.Status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["IpAddress"]) -> typing.Union[MetaOapg.properties.IpAddress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Message"]) -> typing.Union[MetaOapg.properties.Message, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["InternalMessage"]) -> typing.Union[MetaOapg.properties.InternalMessage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Locale"]) -> typing.Union[MetaOapg.properties.Locale, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Rows"]) -> typing.Union[MetaOapg.properties.Rows, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CampaignId"]) -> typing.Union[MetaOapg.properties.CampaignId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CampaignCode"]) -> typing.Union[MetaOapg.properties.CampaignCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CampaignName"]) -> typing.Union[MetaOapg.properties.CampaignName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CampaignIds"]) -> typing.Union[MetaOapg.properties.CampaignIds, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CampaignNames"]) -> typing.Union[MetaOapg.properties.CampaignNames, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CustomerId"]) -> typing.Union[MetaOapg.properties.CustomerId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CustomerTypeId"]) -> typing.Union[MetaOapg.properties.CustomerTypeId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Gender"]) -> typing.Union[MetaOapg.properties.Gender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DateOfBirth"]) -> typing.Union[MetaOapg.properties.DateOfBirth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PersonalId"]) -> typing.Union[MetaOapg.properties.PersonalId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["UserAgent"]) -> typing.Union[MetaOapg.properties.UserAgent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MetaData"]) -> typing.Union[MetaOapg.properties.MetaData, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PaymentId"]) -> typing.Union[MetaOapg.properties.PaymentId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["TransactionId"]) -> typing.Union[MetaOapg.properties.TransactionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["SecondaryTransactionId"]) -> typing.Union[MetaOapg.properties.SecondaryTransactionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Country"]) -> typing.Union[MetaOapg.properties.Country, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Company"]) -> typing.Union[MetaOapg.properties.Company, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrganizationNumber"]) -> typing.Union[MetaOapg.properties.OrganizationNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["FirstName"]) -> typing.Union[MetaOapg.properties.FirstName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["LastName"]) -> typing.Union[MetaOapg.properties.LastName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Email"]) -> typing.Union[MetaOapg.properties.Email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Address1"]) -> typing.Union[MetaOapg.properties.Address1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Address2"]) -> typing.Union[MetaOapg.properties.Address2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Zip"]) -> typing.Union[MetaOapg.properties.Zip, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["City"]) -> typing.Union[MetaOapg.properties.City, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Region"]) -> typing.Union[MetaOapg.properties.Region, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Phone"]) -> typing.Union[MetaOapg.properties.Phone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["MobilePhone"]) -> typing.Union[MetaOapg.properties.MobilePhone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["CareOf"]) -> typing.Union[MetaOapg.properties.CareOf, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingId"]) -> typing.Union[MetaOapg.properties.ShippingId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingCountry"]) -> typing.Union[MetaOapg.properties.ShippingCountry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingCompany"]) -> typing.Union[MetaOapg.properties.ShippingCompany, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingOrganizationNumber"]) -> typing.Union[MetaOapg.properties.ShippingOrganizationNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingFirstName"]) -> typing.Union[MetaOapg.properties.ShippingFirstName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingLastName"]) -> typing.Union[MetaOapg.properties.ShippingLastName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingEmail"]) -> typing.Union[MetaOapg.properties.ShippingEmail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingAddress1"]) -> typing.Union[MetaOapg.properties.ShippingAddress1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingAddress2"]) -> typing.Union[MetaOapg.properties.ShippingAddress2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingZip"]) -> typing.Union[MetaOapg.properties.ShippingZip, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingCity"]) -> typing.Union[MetaOapg.properties.ShippingCity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingRegion"]) -> typing.Union[MetaOapg.properties.ShippingRegion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingPhone"]) -> typing.Union[MetaOapg.properties.ShippingPhone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingMobilePhone"]) -> typing.Union[MetaOapg.properties.ShippingMobilePhone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingCareOf"]) -> typing.Union[MetaOapg.properties.ShippingCareOf, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PickupPoint"]) -> typing.Union[MetaOapg.properties.PickupPoint, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DesiredDeliveryDate"]) -> typing.Union[MetaOapg.properties.DesiredDeliveryDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["FreightClass"]) -> typing.Union['OrderFreightClass', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Sum"]) -> typing.Union[MetaOapg.properties.Sum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ExpectedSum"]) -> typing.Union[MetaOapg.properties.ExpectedSum, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrderValueIncVat"]) -> typing.Union[MetaOapg.properties.OrderValueIncVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["OrderValueExVat"]) -> typing.Union[MetaOapg.properties.OrderValueExVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ItemValueIncVat"]) -> typing.Union[MetaOapg.properties.ItemValueIncVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ItemValueExVat"]) -> typing.Union[MetaOapg.properties.ItemValueExVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DiscountIncVat"]) -> typing.Union[MetaOapg.properties.DiscountIncVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["DiscountExVat"]) -> typing.Union[MetaOapg.properties.DiscountExVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PercentDiscount"]) -> typing.Union[MetaOapg.properties.PercentDiscount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["Balance"]) -> typing.Union[MetaOapg.properties.Balance, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingFeeIncVat"]) -> typing.Union[MetaOapg.properties.ShippingFeeIncVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ShippingFeeExVat"]) -> typing.Union[MetaOapg.properties.ShippingFeeExVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PaymentFeeIncVat"]) -> typing.Union[MetaOapg.properties.PaymentFeeIncVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["PaymentFeeExVat"]) -> typing.Union[MetaOapg.properties.PaymentFeeExVat, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["OrderId", "ExternalOrderId", "CartId", "SessionId", "SiteId", "Currency", "Status", "IpAddress", "Message", "InternalMessage", "Locale", "Rows", "CampaignId", "CampaignCode", "CampaignName", "CampaignIds", "CampaignNames", "CustomerId", "CustomerTypeId", "Gender", "DateOfBirth", "PersonalId", "UserAgent", "MetaData", "PaymentId", "TransactionId", "SecondaryTransactionId", "Country", "Company", "OrganizationNumber", "FirstName", "LastName", "Email", "Address1", "Address2", "Zip", "City", "Region", "Phone", "MobilePhone", "CareOf", "ShippingId", "ShippingCountry", "ShippingCompany", "ShippingOrganizationNumber", "ShippingFirstName", "ShippingLastName", "ShippingEmail", "ShippingAddress1", "ShippingAddress2", "ShippingZip", "ShippingCity", "ShippingRegion", "ShippingPhone", "ShippingMobilePhone", "ShippingCareOf", "PickupPoint", "DesiredDeliveryDate", "FreightClass", "Sum", "ExpectedSum", "OrderValueIncVat", "OrderValueExVat", "ItemValueIncVat", "ItemValueExVat", "DiscountIncVat", "DiscountExVat", "PercentDiscount", "Balance", "ShippingFeeIncVat", "ShippingFeeExVat", "PaymentFeeIncVat", "PaymentFeeExVat", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        OrderId: typing.Union[MetaOapg.properties.OrderId, str, schemas.Unset] = schemas.unset,
        ExternalOrderId: typing.Union[MetaOapg.properties.ExternalOrderId, str, schemas.Unset] = schemas.unset,
        CartId: typing.Union[MetaOapg.properties.CartId, str, schemas.Unset] = schemas.unset,
        SessionId: typing.Union[MetaOapg.properties.SessionId, str, schemas.Unset] = schemas.unset,
        SiteId: typing.Union[MetaOapg.properties.SiteId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        Currency: typing.Union[MetaOapg.properties.Currency, str, schemas.Unset] = schemas.unset,
        Status: typing.Union[MetaOapg.properties.Status, str, schemas.Unset] = schemas.unset,
        IpAddress: typing.Union[MetaOapg.properties.IpAddress, str, schemas.Unset] = schemas.unset,
        Message: typing.Union[MetaOapg.properties.Message, str, schemas.Unset] = schemas.unset,
        InternalMessage: typing.Union[MetaOapg.properties.InternalMessage, str, schemas.Unset] = schemas.unset,
        Locale: typing.Union[MetaOapg.properties.Locale, str, schemas.Unset] = schemas.unset,
        Rows: typing.Union[MetaOapg.properties.Rows, list, tuple, schemas.Unset] = schemas.unset,
        CampaignId: typing.Union[MetaOapg.properties.CampaignId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        CampaignCode: typing.Union[MetaOapg.properties.CampaignCode, str, schemas.Unset] = schemas.unset,
        CampaignName: typing.Union[MetaOapg.properties.CampaignName, str, schemas.Unset] = schemas.unset,
        CampaignIds: typing.Union[MetaOapg.properties.CampaignIds, list, tuple, schemas.Unset] = schemas.unset,
        CampaignNames: typing.Union[MetaOapg.properties.CampaignNames, list, tuple, schemas.Unset] = schemas.unset,
        CustomerId: typing.Union[MetaOapg.properties.CustomerId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        CustomerTypeId: typing.Union[MetaOapg.properties.CustomerTypeId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        Gender: typing.Union[MetaOapg.properties.Gender, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        DateOfBirth: typing.Union[MetaOapg.properties.DateOfBirth, str, datetime, schemas.Unset] = schemas.unset,
        PersonalId: typing.Union[MetaOapg.properties.PersonalId, str, schemas.Unset] = schemas.unset,
        UserAgent: typing.Union[MetaOapg.properties.UserAgent, str, schemas.Unset] = schemas.unset,
        MetaData: typing.Union[MetaOapg.properties.MetaData, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        PaymentId: typing.Union[MetaOapg.properties.PaymentId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        TransactionId: typing.Union[MetaOapg.properties.TransactionId, str, schemas.Unset] = schemas.unset,
        SecondaryTransactionId: typing.Union[MetaOapg.properties.SecondaryTransactionId, str, schemas.Unset] = schemas.unset,
        Country: typing.Union[MetaOapg.properties.Country, str, schemas.Unset] = schemas.unset,
        Company: typing.Union[MetaOapg.properties.Company, str, schemas.Unset] = schemas.unset,
        OrganizationNumber: typing.Union[MetaOapg.properties.OrganizationNumber, str, schemas.Unset] = schemas.unset,
        FirstName: typing.Union[MetaOapg.properties.FirstName, str, schemas.Unset] = schemas.unset,
        LastName: typing.Union[MetaOapg.properties.LastName, str, schemas.Unset] = schemas.unset,
        Email: typing.Union[MetaOapg.properties.Email, str, schemas.Unset] = schemas.unset,
        Address1: typing.Union[MetaOapg.properties.Address1, str, schemas.Unset] = schemas.unset,
        Address2: typing.Union[MetaOapg.properties.Address2, str, schemas.Unset] = schemas.unset,
        Zip: typing.Union[MetaOapg.properties.Zip, str, schemas.Unset] = schemas.unset,
        City: typing.Union[MetaOapg.properties.City, str, schemas.Unset] = schemas.unset,
        Region: typing.Union[MetaOapg.properties.Region, str, schemas.Unset] = schemas.unset,
        Phone: typing.Union[MetaOapg.properties.Phone, str, schemas.Unset] = schemas.unset,
        MobilePhone: typing.Union[MetaOapg.properties.MobilePhone, str, schemas.Unset] = schemas.unset,
        CareOf: typing.Union[MetaOapg.properties.CareOf, str, schemas.Unset] = schemas.unset,
        ShippingId: typing.Union[MetaOapg.properties.ShippingId, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ShippingCountry: typing.Union[MetaOapg.properties.ShippingCountry, str, schemas.Unset] = schemas.unset,
        ShippingCompany: typing.Union[MetaOapg.properties.ShippingCompany, str, schemas.Unset] = schemas.unset,
        ShippingOrganizationNumber: typing.Union[MetaOapg.properties.ShippingOrganizationNumber, str, schemas.Unset] = schemas.unset,
        ShippingFirstName: typing.Union[MetaOapg.properties.ShippingFirstName, str, schemas.Unset] = schemas.unset,
        ShippingLastName: typing.Union[MetaOapg.properties.ShippingLastName, str, schemas.Unset] = schemas.unset,
        ShippingEmail: typing.Union[MetaOapg.properties.ShippingEmail, str, schemas.Unset] = schemas.unset,
        ShippingAddress1: typing.Union[MetaOapg.properties.ShippingAddress1, str, schemas.Unset] = schemas.unset,
        ShippingAddress2: typing.Union[MetaOapg.properties.ShippingAddress2, str, schemas.Unset] = schemas.unset,
        ShippingZip: typing.Union[MetaOapg.properties.ShippingZip, str, schemas.Unset] = schemas.unset,
        ShippingCity: typing.Union[MetaOapg.properties.ShippingCity, str, schemas.Unset] = schemas.unset,
        ShippingRegion: typing.Union[MetaOapg.properties.ShippingRegion, str, schemas.Unset] = schemas.unset,
        ShippingPhone: typing.Union[MetaOapg.properties.ShippingPhone, str, schemas.Unset] = schemas.unset,
        ShippingMobilePhone: typing.Union[MetaOapg.properties.ShippingMobilePhone, str, schemas.Unset] = schemas.unset,
        ShippingCareOf: typing.Union[MetaOapg.properties.ShippingCareOf, str, schemas.Unset] = schemas.unset,
        PickupPoint: typing.Union[MetaOapg.properties.PickupPoint, str, schemas.Unset] = schemas.unset,
        DesiredDeliveryDate: typing.Union[MetaOapg.properties.DesiredDeliveryDate, str, datetime, schemas.Unset] = schemas.unset,
        FreightClass: typing.Union['OrderFreightClass', schemas.Unset] = schemas.unset,
        Sum: typing.Union[MetaOapg.properties.Sum, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ExpectedSum: typing.Union[MetaOapg.properties.ExpectedSum, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        OrderValueIncVat: typing.Union[MetaOapg.properties.OrderValueIncVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        OrderValueExVat: typing.Union[MetaOapg.properties.OrderValueExVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ItemValueIncVat: typing.Union[MetaOapg.properties.ItemValueIncVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ItemValueExVat: typing.Union[MetaOapg.properties.ItemValueExVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        DiscountIncVat: typing.Union[MetaOapg.properties.DiscountIncVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        DiscountExVat: typing.Union[MetaOapg.properties.DiscountExVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        PercentDiscount: typing.Union[MetaOapg.properties.PercentDiscount, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        Balance: typing.Union[MetaOapg.properties.Balance, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ShippingFeeIncVat: typing.Union[MetaOapg.properties.ShippingFeeIncVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        ShippingFeeExVat: typing.Union[MetaOapg.properties.ShippingFeeExVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        PaymentFeeIncVat: typing.Union[MetaOapg.properties.PaymentFeeIncVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        PaymentFeeExVat: typing.Union[MetaOapg.properties.PaymentFeeExVat, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'OrderCheckoutOrder':
        return super().__new__(
            cls,
            *_args,
            OrderId=OrderId,
            ExternalOrderId=ExternalOrderId,
            CartId=CartId,
            SessionId=SessionId,
            SiteId=SiteId,
            Currency=Currency,
            Status=Status,
            IpAddress=IpAddress,
            Message=Message,
            InternalMessage=InternalMessage,
            Locale=Locale,
            Rows=Rows,
            CampaignId=CampaignId,
            CampaignCode=CampaignCode,
            CampaignName=CampaignName,
            CampaignIds=CampaignIds,
            CampaignNames=CampaignNames,
            CustomerId=CustomerId,
            CustomerTypeId=CustomerTypeId,
            Gender=Gender,
            DateOfBirth=DateOfBirth,
            PersonalId=PersonalId,
            UserAgent=UserAgent,
            MetaData=MetaData,
            PaymentId=PaymentId,
            TransactionId=TransactionId,
            SecondaryTransactionId=SecondaryTransactionId,
            Country=Country,
            Company=Company,
            OrganizationNumber=OrganizationNumber,
            FirstName=FirstName,
            LastName=LastName,
            Email=Email,
            Address1=Address1,
            Address2=Address2,
            Zip=Zip,
            City=City,
            Region=Region,
            Phone=Phone,
            MobilePhone=MobilePhone,
            CareOf=CareOf,
            ShippingId=ShippingId,
            ShippingCountry=ShippingCountry,
            ShippingCompany=ShippingCompany,
            ShippingOrganizationNumber=ShippingOrganizationNumber,
            ShippingFirstName=ShippingFirstName,
            ShippingLastName=ShippingLastName,
            ShippingEmail=ShippingEmail,
            ShippingAddress1=ShippingAddress1,
            ShippingAddress2=ShippingAddress2,
            ShippingZip=ShippingZip,
            ShippingCity=ShippingCity,
            ShippingRegion=ShippingRegion,
            ShippingPhone=ShippingPhone,
            ShippingMobilePhone=ShippingMobilePhone,
            ShippingCareOf=ShippingCareOf,
            PickupPoint=PickupPoint,
            DesiredDeliveryDate=DesiredDeliveryDate,
            FreightClass=FreightClass,
            Sum=Sum,
            ExpectedSum=ExpectedSum,
            OrderValueIncVat=OrderValueIncVat,
            OrderValueExVat=OrderValueExVat,
            ItemValueIncVat=ItemValueIncVat,
            ItemValueExVat=ItemValueExVat,
            DiscountIncVat=DiscountIncVat,
            DiscountExVat=DiscountExVat,
            PercentDiscount=PercentDiscount,
            Balance=Balance,
            ShippingFeeIncVat=ShippingFeeIncVat,
            ShippingFeeExVat=ShippingFeeExVat,
            PaymentFeeIncVat=PaymentFeeIncVat,
            PaymentFeeExVat=PaymentFeeExVat,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.order_checkout_order_row import OrderCheckoutOrderRow
from openapi_client.model.order_freight_class import OrderFreightClass
